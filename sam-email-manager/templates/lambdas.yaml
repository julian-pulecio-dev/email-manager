AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  RequestsLayerArn:
    Type: String
    Description: The ARN of the Requests dependency layer.
  GmailLayerArn:
    Type: String
    Description: The ARN of the Gmail API dependency layer.
  VertexAILayerArn:
    Type: String
    Description: The ARN of the Vertex AI API dependency layer.
  LambdaSRCLayerArn:
    Type: String
    Description: The ARN of the Lambda source dependency layer.
  GoogleOAuthAccessTokensTableArn:
    Type: String
    Description: The ARN of the GoogleAccessTokensTable DynamoDB table
  GoogleOAuthAccessTokensTableName:
    Type: String
    Description: The name of the GoogleAccessTokensTable DynamoDB table
  AuthUserPoolId:
    Type: String
    Description: The ID of the Cognito User Pool.
  AuthUserPoolARN:
    Type: String
    Description: The ARN of the Cognito User Pool.
  AuthUserPoolClientId:
    Type: String
    Description: The ID of the Cognito User Pool Client.
  AuthDomain:
    Type: String
    Description: The domain name for the Cognito User Pool.
  CallbackURL:
    Type: String
    Description: The callback URL for the Cognito User Pool Client.

Globals:
  Function:
    Timeout: 600
    Runtime: python3.12
    Architectures:
      - x86_64
    MemorySize: 512
    CodeUri: ../lambdas   

Resources:
  EmailManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: 3000
      Auth:
        DefaultAuthorizer: EmailManagerAuthCognitoAuthorizer
        Authorizers:
          EmailManagerAuthCognitoAuthorizer:
            UserPoolArn: !Ref AuthUserPoolARN
            AuthorizerResultTtlInSeconds: 0
            Identity:
              Header: Authorization
              ReauthorizeEvery: 0

  SendEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions.send_email.lambda_handler
      Layers:
        - !Ref RequestsLayerArn
        - !Ref GmailLayerArn
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_id}}'
          GOOGLE_CLIENT_SECRET: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_secret}}'
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /send_email
            Method: POST

  InterpretPrompt:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions.interpret_prompt.lambda_handler
      Layers:
        - !Ref RequestsLayerArn
        - !Ref VertexAILayerArn
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_id}}'
          GOOGLE_CLIENT_SECRET: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_secret}}'
          GOOGLE_OAUTH_ACCESS_TOKENS_TABLE_NAME: !Ref GoogleOAuthAccessTokensTableName
      Events:
        Preflight:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /interpret_prompt
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /interpret_prompt
            Method: POST
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !Ref GoogleOAuthAccessTokensTableArn

  GetGoogleOAuthTokensFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions.get_google_oauth_tokens.lambda_handler
      Layers:
        - !Ref RequestsLayerArn
        - !Ref GmailLayerArn
        - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p312-cryptography:15
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_id}}'
          GOOGLE_CLIENT_SECRET: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_secret}}'
          GOOGLE_OAUTH_ACCESS_TOKENS_TABLE_NAME: !Ref GoogleOAuthAccessTokensTableName
      Events:
        Preflight:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /get_google_oauth_tokens
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /get_google_oauth_tokens
            Method: POST
            Auth:
              Authorizer: NONE
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !Ref GoogleOAuthAccessTokensTableArn

  TransformPromptToJSONFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions.transform_prompt_to_json.lambda_handler
      Layers:
        - !Ref RequestsLayerArn
        - !Ref GmailLayerArn
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_id}}'
          GOOGLE_CLIENT_SECRET: '{{resolve:secretsmanager:dev/email_manager_client_credentials:SecretString:email_manager_client_secret}}'
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /transform_prompt_to_json
            Method: POST

  SocialAuthCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions.social_auth_callback.lambda_handler
      Layers:
        - !Ref RequestsLayerArn
      Environment:
        Variables:
          EMAIL_MANAGER_AUTH_USER_POOL_CLIENT_ID: !Ref AuthUserPoolClientId
          EMAIL_MANAGER_AUTH_USER_POOL_DOMAIN: !Ref AuthDomain
          CALLBACK_URL: !Ref CallbackURL
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        Preflight:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /email_manager_social_auth_callback
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref EmailManagerApi
            Path: /email_manager_social_auth_callback
            Method: POST
            Auth:
              Authorizer: NONE